(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{443:function(t,e,a){"use strict";a.r(e);var s=a(11),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"_1-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[t._v("#")]),t._v(" 1. 简介")]),t._v(" "),e("p",[t._v("这是一个 ACM-XCPC 竞赛的技能树、代码仓库，由 HDU 吾有一數名之曰誒 (int a)、吾有一數名之曰嗶 (int b) 队员 Axiomofchoice 维护。")]),t._v(" "),e("h2",{attrs:{id:"_2-导航"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-导航"}},[t._v("#")]),t._v(" 2. 导航")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("文件名")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("介绍")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("a",{attrs:{href:"https://github.com/axiomofchoice-hjt/ACM-axiomofchoice/blob/master/Math.md",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("Math.md")]),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("数学")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("a",{attrs:{href:"https://github.com/axiomofchoice-hjt/ACM-axiomofchoice/blob/master/Graph.md",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("Graph.md")]),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("图论")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("a",{attrs:{href:"https://github.com/axiomofchoice-hjt/ACM-axiomofchoice/blob/master/Geometry.md",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("Geometry.md")]),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("计算几何")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("a",{attrs:{href:"https://github.com/axiomofchoice-hjt/ACM-axiomofchoice/blob/master/Datastructure.md",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("Datastructure.md")]),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("数据结构")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("a",{attrs:{href:"https://github.com/axiomofchoice-hjt/ACM-axiomofchoice/blob/master/Others.md",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("Others.md")]),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("动态规划、字符串、编程技巧等")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("a",{attrs:{href:"https://github.com/axiomofchoice-hjt/ACM-axiomofchoice/blob/master/Conclusion.md",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("Conclusion.md")]),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("结论")])])])]),t._v(" "),e("h2",{attrs:{id:"_3-代码风格"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-代码风格"}},[t._v("#")]),t._v(" 3. 代码风格")]),t._v(" "),e("ul",[e("li",[t._v("之前：OI 风格（随便起的名），非必要不用空格、到处压行。")]),t._v(" "),e("li",[t._v("现在：Google 风格但是会有压行。")]),t._v(" "),e("li",[t._v("模板里两种风格共存。")])]),t._v(" "),e("p",[t._v("代码中的预定义：")]),t._v(" "),e("ul",[e("li",[t._v("循环宏，"),e("code",[t._v("repeat (i, a, b)")]),t._v(" 表示 "),e("code",[t._v("i")]),t._v(" 从 "),e("code",[t._v("a")]),t._v(" 循环到 "),e("code",[t._v("b - 1")]),t._v("，"),e("code",[t._v("repeat_back (i, a, b)")]),t._v(" 表示 "),e("code",[t._v("i")]),t._v(" 从 "),e("code",[t._v("b - 1")]),t._v(" 反着循环到 "),e("code",[t._v("a")]),t._v("。")])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name function"}},[t._v("repeat")]),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" _"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name function"}},[t._v("repeat_back")]),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" _"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n")])])]),e("ul",[e("li",[t._v("宏 "),e("code",[t._v("fi")]),t._v(" 表示 "),e("code",[t._v("first")]),t._v("，"),e("code",[t._v("se")]),t._v(" 表示 "),e("code",[t._v("second")]),t._v("。")]),t._v(" "),e("li",[t._v("类型 "),e("code",[t._v("ll")]),t._v(" 表示 "),e("code",[t._v("long long")]),t._v("，"),e("code",[t._v("lf")]),t._v(" 表示 "),e("code",[t._v("double")]),t._v("，"),e("code",[t._v("pii")]),t._v(" 表示 "),e("code",[t._v("pair<int, int>")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("rnd()")]),t._v(" 会生成一个 64 位无符号整数范围内的随机数。")]),t._v(" "),e("li",[t._v("宏 "),e("code",[t._v("mst(a, x)")]),t._v(" 表示 "),e("code",[t._v("memset(a, x, sizeof(a))")]),t._v("。")]),t._v(" "),e("li",[t._v("以前图方便用 "),e("code",[t._v("v << e")]),t._v(" 表示 "),e("code",[t._v("v.push_back(e)")]),t._v("，正在逐渐减少这种写法。")])])])}),[],!1,null,null,null);e.default=r.exports}}]);